redis一共有16个db，默认是在0db上，之间互不影响，密码可以在设置里面设置，在linux里面通过redis-cli模式进入
优化redis可以通过连接池和管道来进行操作，单线程，异步io，朋友圈就是订阅发布
string操作
ord("a")   求a的ASCII码  bin(666)求666的二进制码
set name alex  设置键值
get name  获取值
keys *    显示所有的key
set name alex ex 3   3秒之后自动删除
ex，过期时间（秒） px，过期时间（毫秒） 
nx，如果设置为True，则只有name不存在时，当前set操作才执行 
xx，如果设置为True，则只有name存在时，岗前set操作才执行
mset name1 alex name2 fanta   mset可以批量设置键值对
mget name1 name2    mget批量获取键对应的值
getrange name1 0-2  对值进行切片
getbit name 6   获取name对应值的二进制码的第6位
setbit name 6 1 把name对应值的二进制码的第6位设置为1  这种情况比重新赋值要快
bitcount name 获取name对应的值的二进制表示中1的个数  
例如签到表，谁来了就直接设置为1（setbit name 6 1）第6位为1，还有看谁是否来了也就是是否为1（getbit name 6）6为签到者id
这样用1个字段就可以完成大批量的任务，节省了空间内存还有查询时间
incr name 1 设置为自增，从1开始 decr自减
append name yyy 从原来的值上继续添加字符串

哈希操作
类似于一种嵌套字典
hset info name alex   info是键对应一个字典，相当于是字典嵌套
hset info age 22
hget info name 获取info对应的name的值
HKEYS info  获取info对应的字典的键，没有对应的值
HVALUES info 获取info对应字典的所有值，不包括键
hmget info name age   获取info对应的字典里面多个键的值
hmset info name alex age 22 hobby football    同时设置多个值 info是第一个大的键
HGETALL info 获取info下面的所有键值对
hlen info 获取有多少个
HEXIST info name  有的话返回是1，没有返回0
hdel info name 指定的删除
hincrby info age 自增
HSCAN info a* 匹配出来所有a开头的键值对

列表list
一个键对应的是一个列表
lpush name alex jack alex 可以重复，name代表的是键 
llen name 查看长度
lrange names 0 -1  必须加上参数，代表的是从第0个到第-1个 这个类似于队列，先进后出
lpushx name alex 只有当没有的时候才往里面进行推送，不怎么用
insert names before jack xiaohu   在jack前面插入xiaohu
lset names 3 XIAOHU 重新赋值，下标是从0开始的
lrem names alex 2 删除2个alex
lpop names 删除最后一个赋值的，并且显示出来
lindex names 3 获取下标为3的值
ltrim names 2 5 只保留2-5，这一点与列表有点差别
rpoplpush names names3 把names里面的数值pop出来然后放到names3里面
blpop names 40 让names卡住40秒，有东西塞入就不卡了

集合
sadd name xiaohu alex xiaohu   这时候只能插入
scard name 获取集合里面的个数
sdiff set_name names  比较两个集合，会输出不同的数值出来
sdiffstore set_n2 set_name names 把后两个不同的放到第一个里面
sinter set_n2 name  查交集
sismember set_n2 alex 查询ales是否在集合里面
smembers name  查看name的所有值
srandmember name 随机获取几个值
          有序集合
zadd name 5 xiaohu 3 alex
zrange name 0 -1会进行排序
zrange name xiaohu 查看某一个排名
zremrangebyrank name, min, max 按照排名来删除
expire xiaohu 3 小虎会在3秒钟之后过期
select 1 切换到1这个数据库上面，各数据库可以有重复，互不影响
move alex 1 把name移动到1db上面，如果1之前有alex，那么就移动不了，防止覆盖








