#光纤网卡和HBA卡的区别
"""
存储区域网络(Storage Area Network,简称SAN)   采用     网状通道(Fibre Channel,简称FC,
区别与Fiber Channel光纤通道)技术, 存储区域网络SAN 通过  FC交换机  连接   存储阵列 和  服务器主机.
早期的SAN存储系统中,服务器与交换机的数据传输是通过光纤进行的,因为服务器是把SCSI指令
传输到存储设备上,  不能 走普通LAN网的IP协议,所以需要使用FC传输,因此,这种SAN就叫做FC－SAN.
后来,出现了用   IP协议封装的SAN,  可通过LAN网络,因此,被称为IP-SAN.其中,最典型
的就是现在热门的ISCSI.
这两种方式都需要对数据块进行频繁的读包解包操作,所以高性能的SAN系统是需要在服务器上安装
一块专门负责解包工作,来减轻处理器来自网卡的负担,这种网卡称为HBA卡.HBA卡除了   执行解包
工作外,当然还可以提供一个  光纤接口  用来跟对应的 交换机连接；另外,HBA物理上可以把它当作网卡一样
插,CI或者PCI-E槽位里,因此,这种设备的用法非常像一张网卡,很多人也就把他跟普通网卡或者普通的
光纤网卡混淆.当然,有的ISCSI HBA卡就可以当作普通网卡来用,不过从价格上考虑这样非常浪费的.
因传输协议的不同的,网卡可分为三种,一是以太网卡,二是FC网卡,三是iSCSI网卡
•以太网卡：学名Ethernet Adapter,传输协议为IP协议,一般通过光纤线缆或双绞线与以太网交换机连接
(以太网是局域网的一种，现在局域网就是以太网)
•FC网卡：一般也叫光纤网卡,学名Fibre Channel HBA.传输协议为光纤通道协议.
•ISCSI网卡：学名ISCSI HBA,传输ISCSI协议,接口类型与以太网卡相同.
“光纤网卡”一般是指FC HBA卡,插在服务器上,外接存储用的光纤交换机.
HBA卡：FC-HBA卡(俗称：光纤网卡) iSCSI-HBA卡(RJ45接口)
WWN是HBA卡用的编号吧,每一个光纤通道设备都有一个唯一的标识,称为WWN(world wide name),在有多
台主机使用磁盘阵列时,通过WWN号来  确定哪台主机  正在使用指定的LUN(或者说是逻辑驱动器),被使用的
LUN其他主机将无法使用.

主机总线适配器(Host Bus Adapter)HBA卡
能插入  计算机、服务器或大型主机的  板卡，通过光纤信道或  SCSI 把计算机连接到存储器或存储器网。是一个在服务器和存储装置间
提供输入/输出(I/O)处理和物理连接的电路板或集成电路适配器。因为HBA减轻了主处理器在数据存储和检索任务的负担，它能够提高服务器的性能。
"""

#ram
"""
ram内存
目前绝大多数SSD都是以NAND FLASH为存储介质的。SSD工作原理很多都是基于NAND FLASH特性的。比如，NAND FLASH在写之前必须先擦除，
而不能覆盖写，NAND FLASH 每个块（Block）擦写次数达到一定值，这个块就不能用了
"""

#scsi
"""
Linux中的SCSI设备的命名方式能够帮助用户识别设备.例如,第一个SCSI CD-ROM是/dev/scd0.SCSI磁
盘的标签为/dev/sda /dev/sdb和/dev/sdc等.这些 SCSI 设备可能具有通用的名称和接口,比如
/dev/sg0 /dev/sg1或/dev/sga /dev/sgb等.通过这些通用的驱动器接口,您就可以将SCSI命令直接发送
到SCSI设备,而不需要经过在SCSI磁盘上创建(并装载到某个目录)的文件系统.
sg_inq -d /dev/sdb  支持那些标准的version descriptor
sg_vpd /dev/sdh  支持那些vpd
sg_scan和cat /proc/scsi/scsi
lshw查看所有硬件摘要信息，lsscsi查看SCSI控制器设备的信息
在Linux中scsi驱动基本分为三大层：top level,middle level以及lower level.在scsi middle level
定义了scsi device的数据结构,用于描述一个scsi的具体功能单元,其在scsi host中通过channel,id,lun
进行寻址.
在scsihost中可以存在多个channel,每个channel是一条完整的scsi总线,在scsi总线上可以连接
多个scsi节点,每个节点采用id进行编号.每个节点可以根据功能划分成多个lun,每个lun才是我们
通常所说的scsi设备.
#scsi host的抽象
scsi host的语义很清晰,其描述了一个scsi总线控制器.在很多实际的系统中,scsi host为一块基于
PCI总线的HBA或者为一个SCSI控制器芯片.每个scsi host可以存在多个channel,一个channel实际扩展了
一条SCSI总线.每个channel可以连接多个scsi节点,具体连接的数量与scsi总线带载能力有关.
I2C总线是由数据线SDA和时钟SCL构成的串行总线,可发送和接收数据.在CPU与被控IC之间 IC与IC之间进
行双向传输.各种被控制电路均并联在这条总线上,但就像电话机一样只有拨通各自的号码才能工作,所以每
个电路和模块都有唯一的地址,在信息的传输过程中,I2C总线上并接的每一模块电路既是主控器,又是发送器
(或接收器),这取决于它所要完成的功能.
CPU发出的控制信号分为地址码和控制量两部分,地址码用来选址,即接通需要控制的电路,确定控制的种类；
控制量决定该调整的类别(如对比度 亮度等)及需要调整的量.这样,各控制电路虽然挂在同一条总线上,
却彼此独立,互不相关.
"""

#sas
"""
sas
sas比SCSI更细、针脚更少的SATA线缆，有助于服务器厂商更好地解决气流和散热问题
即串行连接SCSI 的意思。跟SATA 总线有点类似，都是采用串行技术以获得更高的传输速度。
SAS 的接口技术可以向下兼容SATA 。具体来说，二者的兼容性主要体现在物理层和协议层的兼容。在物理层，SAS 接口和SATA 接口完全兼容，
SATA盘可以直接使用在SAS 的环境中，从接口标准上而言，SATA 是SAS 的一个子标准，因此SAS 控制器可以直接操控SATA 硬盘，
但是SAS 却不能直接 使用在SATA 的环境中，因为SATA 控制器并不能对SAS 硬盘进行控制.
"""

#磁盘注入错误
"""
PLIST,基本缺陷列表是厂家使用专门的测试设备发现的缺陷，这些缺陷是磁介质寿命完成之后产生的永久缺陷，对于非厂家来说是不能够取消的
GLIST,成长缺陷列表，对硬盘操作过程中发现的缺陷，这些缺陷可以在格式化的过程中发现
scsi: 注入错误，可以通过sg_logs来查看
log page:
Solid State Media log page
Temperature
defect data:
plist glist
code error:
CHECK CONDITION
BUSY
TASK SET FULL
TASK ABORTED
"""

#bmc
"""
bmc 可以在机器未开机的状态下，对机器进行固件升级、查看机器设备、等一些操作。
ipmitool -t 0x1e -U admin -P admin -H 192.168.188.91 power off
sensor list 显示系统所有传感器列表
fru list 显示系统所有现场可替代器件的列表
lan print 显示channel的网络配置信息
sel list 显示所有系统事件日志
Ipmitool chassis bootdev pxe
首先,PXE client端(BIOS里面的PXE固件)广播一个DHCPDISCOVER的包,它询问所需的网络配置以及网络启
动的参数.标准DHCP服务器(非PXE enabled)将回复一个普通的DHCPOFFER包,其中包含网络信息(如IP地址
),但并不能提供PXE相关参数,因此PXE Client并不能启动.而PXE enabled的DHCP服务器所回复的
DHCPOFFER包里则包含PXE相关信息.
在解析一个PXE enabled的DHCP服务器返回的DHCPOFFER包后,PXE client就能够设置自己的IP地址 IP Mask等等,
并且指向网络上的启动资源,比如TFTP服务器上的vmlinuz文件和initrd文件.
然后PXE client就通过TFTP下载这些启动资源到自己的内存中.这些启动资源其实就是最小的操作系统.这个
最小操作系统在装载了网络驱动和TCP/IP协议栈之后,就会开始boot或者install完整的操作系统了.而这个
boot或install的过程,就不再通过TFTP来做,而是通过更加健壮的网络传输协议(如HTTP,CIFS,iSCSI或
NFS)来做.而boot或者install所用到的实体,比如磁盘或者CD-ROM是位于远端的,因此需要通过网络传输协
议来做.
1. 内核引导之前的不同
普通的从硬盘启动Linux系统最初是BIOS将MBR(主引导记录)加载入内存,然后将控制权交给MBR中的
bootloader程序,bootloader程序经过几个stage的加载后,最后将vmlinuz(可引导的,压缩的内核)加载入
内存,开始内核引导.
而PXE的启动过程在内核引导之前,是由BIOS中的PXE固件开启NBP程序(比如DHCP的网络通信),然后下载
vmlinuz和initrd,之后再进入内核启动过程.
2. 内核引导之后的不同
vmlinuz和initrd运行得差不多了之后,普通的硬盘Linux启动就从本地硬盘加载/sbin/init并运行为1号进程,
以及启动系统服务等等,而PXE的启动在内核引导完成之后,仍然会通过网络的方式(但不是TFTP协议,而是其他
更加健壮的协议如NFS,iSCSI等),加载真正的完整操作系统,如/sbin/init应该就是位于网络远端的硬盘上.
"""

#bios seabios smbios
"""
bios(它是一组固化到计算机内主板上一个ROM芯片上的程序，它保存着计算机最重要的基本输入输出的程序、
开机后自检程序和系统自启动程序，它可从CMOS中读写系统设置的具体信息)seabios、smbios
bios 自检及初始化 程序服务处理 硬件中断处理
BIOS程序是计算机上电后，CPU第一个开始运行的程序，完全运行在裸金属上，用于完成对系统硬件的初始化，并且为启动OS做好准备
SeaBIOSSeaBIOS和正常BIOS的区别在于其运行的环境是一个由Hypervisor模拟出来的环境，有很多地方可以简化
如芯片、内存和总线
SMBIOS是主板或系统制造者以标准格式显示产品管理信息所需遵循的统一规范
dmidecode -t chassis dmidecode的作用是将DMI数据库中的信息解码，以可读的文本方式显示
"""

"""
ESXi专为运行虚拟机、最大限度降低配置要求和简化部署而设计
"""

#pci nvme pcie
"""
PCI总线 是一种树型结构，并且独立于CPU总线，可以和CPU总线并行操作。PCI总线上可以挂接PCI设备和PCI桥片，PCI总线上
只允许有一个PCI主设备，其他的均为PCI 从设备，而且读写操作只能在主从设备之间进行，从设备之间的数据交换需要通过主设备中转。
controller还有显卡声卡就是pci设备

NVM Express（NVMe），或称非易失性内存主机控制器接口规范(Non-Volatile Memory express),，是一个逻辑设备接口规范。
他是与AHCI类似的、基于设备逻辑接口的总线传输协议规范（相当于通讯协议中的应用层），用于访问通过PCI-Express（PCIe）总线
附加的非易失性内存介质，虽然理论上不一定要求 PCIe 总线协议。

PCI Express是新一代的总线接口。早在2001年的春季，英特尔公司就提出了要用新一代的技术取代PCI总线和多种芯片的内部连接，
并称之为第三代I/O总线技术。随后在2001年底，包括Intel、AMD、DELL、IBM在内的20多家业界主导公司开始起草新技术的规范，
并在2002年完成，对其正式命名为PCI Express。它采用了目前业内流行的点对点串行连接，比起PCI以及更早期的计算机总线的共享
并行架构，每个设备都有自己的专用连接，不需要向整个总线请求带宽，而且可以把数据传输率提高到一个很高的频率，达到PCI所不能提供的高带宽。
"""

"""
共享内存是常用的进程间通信，两个进程可以直接共享访问同一块内存区域
"""

"""
硬盘控制器（HardDriveController）是电脑里的控制部件,硬盘控制器即磁盘驱动器 的 适配器。是计算机与磁盘驱动器的接口设备。
它接收并解释计算机来的命令，向磁盘驱动器发出各种控制信号   是在硬盘里面的 控制nand flash
通常使用两种类型的控制器：IDE和SCSI
IDE控制器经常制作在主板中，最多能够支持4个硬盘
SCSI(发音如scuzzy)是非常先进的硬盘控制器，可以联接多达30件设备和外围
"""

"""
RAID控制器是在硬盘外面的，是一种硬件设备或软件程序，用于管理计算机或存储阵列中的硬盘驱动器（HDD）/固态硬盘（SSD），以便它们
能如逻辑部件一样工作，各司其职。控制一堆盘     模拟的pmc和lsi就是raid控制器
warnado是DPE(disk processor enclosure磁盘处理器外壳,带有RAID控制器) tobasco是DAE(disk array enclosure磁盘阵列外壳,单一的磁盘扩展单元)
"""

"""
I2C只有两条线,一条串行数据线:SDA,一条是时钟线SCL,使用这两根信号线就实现了设备之间的数据交互.
I2C总线是一个通用的串行总线,可以挂在slave地址.
支持热插拔
I2C主要用于系统内部,而RS485/232多用于外部设备的连接
I2C从技术上说属于同步串行总线,RS485/232属于异步串行总线
"""

"""
VPD 重要产品数据

ipmitool -I lanplus -U admin -P admin -H 127.0.0.1 sol activate
打开SOL功能
Serial Over LAN (SOL) 功能非常有用.SOL 通过 IPMI 会话重定向本地串行接口,允许远程访问访问 LINUX 串行控制台.
SOL查看BIOS输出,需要在BIOS里将BIOS的信息重定向到串口COM2
如果要通过SOL查看linux的控制台，还需要重定向kernel的输出

feature 磁盘特性

SES (SCSI Enclosure Service)协议决定了SES device必须是一个SCSI device，这是因为SES协议是通过
SCSI Command "Send Diagnostics" 和 "receive diagnostics"传递协议中的page
"""

目前来说，QEMU是一个独立的虚拟化解决方案，并不依赖KVM（它本身自己可以做CPU和内存的模拟，只不过效率较低），
而KVM是另一套虚拟化解决方案，对CPU进行虚拟效率较高（采用了硬件辅助虚拟化），但本身不提供其他设备的虚拟化，
借用了QEMU的代码进行了定制，所以KVM方案一定要依赖QEMU,即使后来RedHat后来开发了libvirt，也只能简单的认为
是个虚拟机管理工具，仍然需要通过用户空间QEMU来与KVM进行交互。
